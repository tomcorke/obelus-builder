{"version":3,"sources":["components/item-slot.module.scss","components/app.module.scss","components/item-select.module.scss","components/equipped-items.module.scss","utils.ts","data/item-qualities.ts","data/armor.ts","data/item-types.ts","data/brands.ts","components/item-slot.tsx","components/item-select.tsx","components/equipped-items.tsx","serviceWorker.ts","index.tsx","components/app.tsx"],"names":["module","exports","itemSlot","equipped","quality_worn","itemData","qualityStripe","quality_standard","quality_specialized","quality_superior","quality_highend","quality_exotic","details","brand","level","scoreValue","stats","armorLabel","talents","app","main","itemSelect","contents","equippedItems","randomFrom","array","Math","floor","random","length","ITEM_QUALITIES","ARMOR_NAMES","randomArmorName","ItemTypes","BRANDS","BRAND_NAMES","_BRAND_NAMES","Object","defineProperty","randomBrand","ItemSlot","_ref","_classnames","armor","itemDisplay","itemType","react","className","STYLES","name","scoreLabel","armorValue","itemDataDisplay","quality","classnames","concat","defaultItems","map","ItemSelect","_ref$items","items","onSelectItem","onCancel","react_default","a","createElement","onClick","item","itemSelectSlot","e","stopPropagation","itemSlotClick","onDoubleClick","item_slot_ItemSlot","randomItems","Array","fill","EquippedItems","onClickItem","slotIndex","Boolean","window","location","hostname","match","ReactDOM","render","_useState","useState","_useState2","slicedToArray","showItemSelect","setShowItemSelect","header","equipped_items_EquippedItems","item_select_ItemSelect","console","log","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.becb9a01.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemSlot\":\"item-slot_itemSlot__31P2B\",\"equipped\":\"item-slot_equipped__1HRSi\",\"quality_worn\":\"item-slot_quality_worn__3DYkB\",\"itemData\":\"item-slot_itemData__3LHAr\",\"qualityStripe\":\"item-slot_qualityStripe__2oUrN\",\"quality_standard\":\"item-slot_quality_standard__17OWF\",\"quality_specialized\":\"item-slot_quality_specialized__Piph4\",\"quality_superior\":\"item-slot_quality_superior__12XC_\",\"quality_highend\":\"item-slot_quality_highend__17UWP\",\"quality_exotic\":\"item-slot_quality_exotic__3QMCm\",\"details\":\"item-slot_details__1zcb4\",\"brand\":\"item-slot_brand__1ZmX5\",\"level\":\"item-slot_level__1GZeU\",\"scoreValue\":\"item-slot_scoreValue__3NMcC\",\"stats\":\"item-slot_stats__2AhaJ\",\"armorLabel\":\"item-slot_armorLabel__Aty-E\",\"talents\":\"item-slot_talents__EilGg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__19emi\",\"main\":\"app_main__22gwj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemSelect\":\"item-select_itemSelect__30-br\",\"contents\":\"item-select_contents__2dQz7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"equippedItems\":\"equipped-items_equippedItems__CvJjF\"};","export function randomFrom<T>(array: T[]): T {\n  return array[Math.floor(Math.random() * array.length)]\n}","import { randomFrom } from \"../utils\";\n\nconst ITEM_QUALITY_WORN = 'worn'\nconst ITEM_QUALITY_STANDARD = 'standard'\nconst ITEM_QUALITY_SPECIALIZED = 'specialized'\nconst ITEM_QUALITY_SUPERIOR = 'superior'\nconst ITEM_QUALITY_HIGHEND = 'highend'\nconst ITEM_QUALITY_GEARSET = 'gearset'\nconst ITEM_QUALITY_EXOTIC = 'exotic'\n\nexport type ItemQuality =\n  | typeof ITEM_QUALITY_WORN\n  | typeof ITEM_QUALITY_STANDARD\n  | typeof ITEM_QUALITY_SPECIALIZED\n  | typeof ITEM_QUALITY_SUPERIOR\n  | typeof ITEM_QUALITY_HIGHEND\n  | typeof ITEM_QUALITY_EXOTIC\n\nexport const ITEM_QUALITIES: ItemQuality[] = [\n  ITEM_QUALITY_WORN,\n  ITEM_QUALITY_STANDARD,\n  ITEM_QUALITY_SPECIALIZED,\n  ITEM_QUALITY_SUPERIOR,\n  ITEM_QUALITY_HIGHEND,\n  ITEM_QUALITY_EXOTIC,\n]\n\nexport const ItemQualities = {\n  WORN: ITEM_QUALITY_WORN as typeof ITEM_QUALITY_WORN,\n  STANDARD: ITEM_QUALITY_STANDARD as typeof ITEM_QUALITY_STANDARD,\n  SPECIALIZED: ITEM_QUALITY_SPECIALIZED as typeof ITEM_QUALITY_SPECIALIZED,\n  SUPERIOR: ITEM_QUALITY_SPECIALIZED as typeof ITEM_QUALITY_SPECIALIZED,\n  HIGHEND: ITEM_QUALITY_HIGHEND as typeof ITEM_QUALITY_HIGHEND,\n  EXOTIC: ITEM_QUALITY_EXOTIC as typeof ITEM_QUALITY_EXOTIC,\n}\n\nexport const randomQuality = () => randomFrom(ITEM_QUALITIES)","import { randomFrom } from \"../utils\";\n\nexport const ARMOR_NAMES = [\n  '\"Awe\" Thigh Mag/Holster',\n  'Artemis Fast Draw Holster',\n]\n\nexport const randomArmorName = () => randomFrom(ARMOR_NAMES)","const ITEM_TYPE_WEAPON = 'weapon'\nconst ITEM_TYPE_ARMOR = 'armor'\n\nexport type ItemType =\n  | typeof ITEM_TYPE_WEAPON\n  | typeof ITEM_TYPE_ARMOR\n\n\nexport const ITEM_TYPES: ItemType[] = [\n  ITEM_TYPE_WEAPON,\n  ITEM_TYPE_ARMOR,\n]\n\nexport const ItemTypes = {\n  WEAPON: ITEM_TYPE_WEAPON as typeof ITEM_TYPE_WEAPON,\n  ARMOR: ITEM_TYPE_ARMOR as typeof ITEM_TYPE_ARMOR,\n}\n","import { randomFrom } from \"../utils\";\n\nconst BRAND_FENRIS = 'fenris'\nconst BRAND_DOUGLASHARDING = 'douglasharding'\nconst BRAND_ARIALDI = 'arialdi'\nconst BRAND_GILA = 'gila'\n\nexport type Brand =\n  | typeof BRAND_FENRIS\n  | typeof BRAND_DOUGLASHARDING\n  | typeof BRAND_ARIALDI\n  | typeof BRAND_GILA\n\nexport const BRANDS: Brand[] = [\n  BRAND_FENRIS,\n  BRAND_DOUGLASHARDING,\n  BRAND_ARIALDI,\n  BRAND_GILA,\n]\n\nexport const Brands = {\n  FENRIS: BRAND_FENRIS as typeof BRAND_FENRIS,\n  DOUGLASHARDING: BRAND_DOUGLASHARDING as typeof BRAND_DOUGLASHARDING,\n  ARIALDI: BRAND_ARIALDI as typeof BRAND_ARIALDI,\n  GILA: BRAND_GILA as typeof BRAND_GILA\n}\n\nexport const BRAND_NAMES = {\n  [BRAND_FENRIS]: 'Fenris',\n  [BRAND_DOUGLASHARDING]: 'Douglas & Harding',\n  [BRAND_ARIALDI]: 'Arialdi Holdings',\n  [BRAND_GILA]: 'Gila Group',\n}\n\nexport const randomBrand = () => {\n  return randomFrom(BRANDS)\n}","import * as React from 'react'\nimport classnames from 'classnames'\n\nimport STYLES from './item-slot.module.scss'\nimport { ItemQuality } from '../data/item-qualities';\nimport { Item, Weapon, Armor } from '../data/items';\nimport { ItemTypes } from '../data/item-types';\nimport { BRAND_NAMES } from '../data/brands';\n\ninterface ItemSlotProps {\n  itemData?: Item\n  equipped?: boolean\n}\n\nconst weaponDisplay = (weapon: Weapon) => (<div />)\n\nconst armorDisplay = (armor: Armor) => (\n  <>\n    <div className={STYLES.details}>\n      <div className={STYLES.name}>{armor.name}</div>\n      <div className={STYLES.brand}>{BRAND_NAMES[armor.brand]}</div>\n    </div>\n    <div className={STYLES.level}>\n      <div className={STYLES.scoreLabel}>Score</div>\n      <div className={STYLES.scoreValue}>450</div>\n    </div>\n    <div className={STYLES.stats}>\n      <div className={STYLES.armorLabel}>ARM</div>\n      <div className={STYLES.armorValue}>31.6k</div>\n    </div>\n    <div className={STYLES.talents} />\n  </>\n)\n\nexport const ItemSlot = ({ itemData, equipped }: ItemSlotProps) => {\n  if (!itemData) return null\n\n  let itemDisplay = null\n  if (itemData.itemType === ItemTypes.WEAPON)\n    itemDisplay = weaponDisplay(itemData)\n  if (itemData.itemType === ItemTypes.ARMOR)\n    itemDisplay = armorDisplay(itemData)\n\n  const itemDataDisplay = (\n    <div className={STYLES.itemData}>\n      <div className={STYLES.qualityStripe} />\n      {itemDisplay}\n    </div>\n  )\n\n  const quality = itemData && itemData.quality;\n\n  return (\n    <div className={classnames(\n      STYLES.itemSlot,\n      {\n        [STYLES.equipped]: !!equipped,\n        [STYLES[`quality_${quality}`]]: !!quality,\n      })}>\n      {itemDataDisplay}\n    </div>\n  )\n\n}","import React from 'react'\n\nimport STYLES from './item-select.module.scss'\nimport { ITEM_QUALITIES } from '../data/item-qualities';\nimport { Armor, Item } from '../data/items';\nimport { randomArmorName } from '../data/armor';\nimport { ItemTypes } from '../data/item-types';\nimport { randomBrand } from '../data/brands';\nimport { ItemSlot } from './item-slot';\n\ninterface ItemSelectProps {\n  items?: Item[],\n  onSelectItem: (item: Item) => any\n  onCancel: () => any\n}\n\nconst defaultItems = ITEM_QUALITIES.map(quality => {\n  const armor : Armor = {\n    itemType: ItemTypes.ARMOR,\n    name: randomArmorName(),\n    quality,\n    brand: randomBrand(),\n  }\n  return armor;\n});\n\nexport const ItemSelect = ({ items = defaultItems, onSelectItem, onCancel }: ItemSelectProps) => {\n\n  const itemSlotClick = (e: React.MouseEvent, item: Item) => {\n    e.stopPropagation()\n    // onSelectItem(item)\n  }\n\n  return (\n    <div className={STYLES.itemSelect} onClick={onCancel}>\n      <div className={STYLES.contents}>\n        {items.map(item => (\n          <div className={STYLES.itemSelectSlot} onClick={(e) => itemSlotClick(e, item)} onDoubleClick={() => onSelectItem(item)}>\n            <ItemSlot itemData={item} />\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}","import React from 'react'\n\nimport STYLES from './equipped-items.module.scss'\nimport { Armor, Item } from '../data/items';\nimport { randomArmorName } from '../data/armor';\nimport { randomQuality } from '../data/item-qualities';\nimport { ItemTypes } from '../data/item-types';\nimport { randomBrand } from '../data/brands';\nimport { ItemSlot } from './item-slot';\n\nconst randomItems = Array(8).fill(true).map(() => {\n  const armor : Armor = {\n    itemType: ItemTypes.ARMOR,\n    name: randomArmorName(),\n    quality: randomQuality(),\n    brand: randomBrand(),\n  }\n  return armor\n});\n\ninterface EquippedItemsProps {\n  onClickItem: (slotIndex: number, item?: Item) => any\n}\n\nexport const EquippedItems = ({ onClickItem }: EquippedItemsProps) => {\n\n  return (\n    <div className={STYLES.equippedItems}>\n      {randomItems.map((item, slotIndex) => (\n        <div onClick={() => onClickItem(slotIndex, item)}>\n          <ItemSlot itemData={item} equipped={true} />\n        </div>\n      ))}\n    </div>\n  )\n\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype ServiceWorkerConfig = any\n\nexport function register(config: ServiceWorkerConfig) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config: ServiceWorkerConfig) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config: ServiceWorkerConfig) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './components/app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useState } from 'react';\n\nimport STYLES from './app.module.scss';\nimport { Item } from '../data/items';\nimport { ItemSelect } from './item-select';\nimport { EquippedItems } from './equipped-items';\n\nexport const App = () => {\n\n  const [showItemSelect, setShowItemSelect] = useState(true);\n\n  return (\n    <div className={STYLES.app}>\n      <header className={STYLES.header}>\n      </header>\n      <main className={STYLES.main}>\n\n        <EquippedItems onClickItem={() => setShowItemSelect(true)} />\n\n        {showItemSelect\n          ? <ItemSelect\n            onSelectItem={(item: Item) => { setShowItemSelect(false); console.log(item) }}\n            onCancel={() => setShowItemSelect(false)}\n            />\n          : null}\n\n      </main>\n    </div>\n  )\n\n}\n"],"sourceRoot":""}